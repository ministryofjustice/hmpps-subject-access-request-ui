version: '3.1'
services:

  redis:
    image: 'redis:7.2'
    networks:
      - hmpps
    container_name: redis
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    ports:
      - '6379:6379'




  hmpps-auth:
    image: quay.io/hmpps/hmpps-auth:latest
    networks:
      - hmpps
    container_name: hmpps-auth
    ports:
      - "9090:8080"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/auth/health"]
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - APPLICATION_AUTHENTICATION_UI_ALLOWLIST=0.0.0.0/0

  manage-users-api:
    image: quay.io/hmpps/hmpps-manage-users-api:latest
    networks:
      - hmpps
    container_name: manage-users-api_mhaa
    depends_on:
      - hmpps-auth
    ports:
      - "9091:8080"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/health" ]
    environment:
      - SERVER_PORT=8080
      - SPRING_PROFILES_ACTIVE=dev
      - HMPPS_AUTH_ENDPOINT_URL=http://hmpps-auth:8080/auth
      - EXTERNAL_USERS_ENDPOINT_URL=http://hmpps-external-users-api:8080

  app:
    build:
      context: .
      args:
        BUILD_NUMBER: "1.0.0"
        GIT_REF: "a1b2c3"
        GIT_BRANCH: main
    networks:
      - hmpps
    depends_on: [redis]
    ports:
      - "3000:3000"
    environment:
      - PRODUCT_ID=UNASSIGNED
      - REDIS_HOST=redis
      - HMPPS_AUTH_EXTERNAL_URL=http://localhost:9090/auth
      - HMPPS_AUTH_URL=http://hmpps-auth:8080/auth
      # These will need to match new creds in the seed auth service auth
      - API_CLIENT_ID=client-id
      - API_CLIENT_SECRET=client-secret
      - SYSTEM_CLIENT_ID=system-client-id
      - SYSTEM_CLIENT_SECRET=system-client-secret
      - SESSION_SECRET=somesecretvalue
      - TOKEN_VERIFICATION_API_URL=http://hmpps-auth:8080/auth
      - TOKEN_VERIFICATION_ENABLED=false
      - INGRESS_URL=http://localhost:3000
      - SERVICE_CATALOGUE_URL=http://localhost:1337/v1




  hmpps-service-catalogue:
    image: quay.io/hmpps/hmpps-service-catalogue:latest
    networks:
      - hmpps
    container_name: hmpps-service-catalogue
    ports:
      - "1337:1337"
    env_file: .env.dpscatalogue.example
    environment:
      DATABASE_CLIENT: postgres
      DATABASE_HOST: strapiDB
      DATABASE_PORT: 5432
      DATABASE_NAME: strapi
      DATABASE_USERNAME: postgres
      DATABASE_PASSWORD: password
      JWT_SECRET: randomSecret
      ADMIN_JWT_SECRET: randomJwtSecret
      APP_KEYS: randomApiKey
      NODE_ENV: development
    depends_on:
      - strapiDB

  strapiDB:
    container_name: strapiDB
    platform: linux/amd64 #for platform error on Apple M1 chips
    restart: unless-stopped
    env_file: 
      - .env.dpscatalogue.example
    image: postgres:12.0-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: strapi
    volumes:
        - strapi-data:/var/lib/postgresql/data/ #using a volume
    #   - ./data:/var/lib/postgresql/data/ # if you want to use a bind folder
    ports:
      - '5432:5432'
    networks:
      - hmpps

volumes:
  strapi-data:

networks:
    hmpps:
